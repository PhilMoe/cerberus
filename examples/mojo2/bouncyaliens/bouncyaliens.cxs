' Cerberus X - Bouncy Aliens example
'
' Shows how to use a stack, handle suspend and resume events, use pre-processor directives and achieve simple animation.

Strict

Import mojo2

Const DRAW_WIDTH:Int = 320
Const DRAW_HEIGHT:Int = 240


Class Sprite

	Field x:Float, vx:Float
	Field y:Float, vy:Float
	Field xscale:Float, yscale:Float
	Field frame:Int
	Field frameset:Int
	Field frametime:Int
	Field rotation:Int
	Field vrotation:Int

	Method New()
		x = Rnd(DRAW_WIDTH)
		y = Rnd(DRAW_HEIGHT)
		vx = Rnd(1, 2)
		If Rnd(1) >= 0.5 vx = -vx
		vy = Rnd(1,2)
		If Rnd(1) >= 0.5 vy = -vy
		xscale = Rnd(1, 3)
		yscale = Rnd(1, 3)
		frame = Int(Rnd(0, 8))
		frameset = Int(Rnd(1,3))
		frametime = Millisecs() + 50
		rotation = Int(Rnd(359))
		If Rnd(1) >= 0.5 
			vrotation = Int(Rnd(1,3))
		Else
			vrotation = -Int(Rnd(1,3))
		Endif	
	End

	Method Update:Int()
		
		' update position
		x += vx
		If x < 0 Or x >= DRAW_WIDTH vx = -vx
		y += vy
		If y < 0 Or y >= DRAW_HEIGHT vy = -vy
		
		' update frame
		If Millisecs() > frametime
			frame += 1
			If frame = 8 frame = 0
			frametime = Millisecs() + 50
		Endif
		' update rotation
		rotation += vrotation
		
		Return 0
	End
End


Class MyApp Extends App

	Field myCanvas:Canvas
	Field frames1:Image[]
	Field frames2:Image[]
	Field sprites:=New Stack<Sprite>
	Field fullscreen:Bool = False
	Field paused:Bool = False
	
	Method ToggleFullscreen:Void()
		
		fullscreen = Not fullscreen
		If fullscreen
			Local desktop:DisplayMode = DesktopMode()
			SetDeviceWindow(desktop.Width, desktop.Height, 1)
			SetSwapInterval(1)
			SetUpdateRate(0)
		Else
			SetDeviceWindow 640, 480, 4
			SetSwapInterval(1)
			SetUpdateRate(0)
		Endif
	End
	
	
	Method OnCreate:Int()

		Image.SetFlagsMask(Image.Managed)
		
		myCanvas=New Canvas()
								
		frames1 = Image.LoadFrames("alien1.png", 8)
		frames2 = Image.LoadFrames("alien2.png", 8)
		
		For Local i:Int = 0 Until 25
			sprites.Push New Sprite
		Next
		
		SetUpdateRate(60)

		Return 0
	End
	

	Method OnUpdate:Int()
	
		' switch to full screen only possible in Desktop mode
		If KeyHit( KEY_SPACE ) 
			#If TARGET = "glfw"
				ToggleFullscreen
			#Endif
		Endif
		
		' add/remove 25 sprites per click
		' make existing sprites smaller/larger as new ones are added/removed
		If MouseHit(MOUSE_RIGHT) And Not sprites.IsEmpty()		
			For Local i:Int = 0 Until 25
				sprites.Pop()
			Next
			For Local sprite:=Eachin sprites
				sprite.xscale *= 1.25
				sprite.yscale *= 1.25
			Next
			
		Elseif MouseHit(MOUSE_LEFT)
			For Local sprite:=Eachin sprites
				sprite.xscale *= 0.8
				sprite.yscale *= 0.8
			Next
			For Local i:Int = 0 Until 25
				sprites.Push(New Sprite())
			Next
		Endif				
		
		For Local sprite:=Eachin sprites
			sprite.Update()
		Next
	
		Return 0	
 	End
 	
	
	Method OnRender:Int()
	
		Local dw:Int = DeviceWidth()
		Local dh:Int = DeviceHeight()
		Local centrex:Int = dw / 2
		Local centrey:Int = dh / 2
		
		' make sure viewport fills device in case window size has changed
		myCanvas.SetViewport(0, 0, dw, dh)		
		myCanvas.SetProjection2d(0, DRAW_WIDTH, 0, DRAW_HEIGHT)
		myCanvas.Clear(0, 0, 0, 1)

		For Local sprite := Eachin sprites

			If sprite.frameset = 1 
				myCanvas.DrawImage(frames1[sprite.frame], sprite.x, sprite.y, sprite.rotation, sprite.xscale, sprite.yscale)
			Else
				myCanvas.DrawImage(frames2[sprite.frame], sprite.x, sprite.y, sprite.rotation, sprite.xscale, sprite.yscale)
			Endif		
		Next
		
		' scale to window dimensions
		myCanvas.SetProjection2d(0, dw, 0, dh)

		myCanvas.DrawText ("[LMB - Add Sprites]     [RMB - Remove Sprites]", centrex, 8, 0.5)
		#If TARGET = "glfw" 
			myCanvas.DrawText ("[Space - Toggle Fullscreen]", centrex, 28, 0.5)
		#Endif
		myCanvas.DrawText ("Sprites: " + sprites.Length(), centrex, dh - 20, 0.5)
					
		If paused
			myCanvas.SetColor(0, 0, 0, 0.5)
			myCanvas.DrawRect(0, 0, dw, dh)
			myCanvas.SetColor(1, 1, 1, 1)
			myCanvas.DrawText("Suspended", centrex, centrey, 0.5, 0.5)
		Endif
		
		myCanvas.Flush
		Return 0		
	End
	
	
	Method OnSuspend:Int()
		Print "BouncyAliens: OnSuspend"
		paused=True
		Return 0
	End


	Method OnResume:Int()
		Print "BouncyAliens: OnResume"
		paused=False
		Return 0
	End
	
	
	Method OnClose:Int()
		Print "BouncyAliens: OnClose"
		Super.OnClose()
		Return 0
	End
	
End


Function Main:Int()
	New MyApp
	Return 0	
End