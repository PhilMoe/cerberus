Building instructions

Before you beging. You should check out one of the desktop sub forums for any issues and work arounds, or to ask questions.
https://www.cerberus-x.com/community/categories/desktop-targets.70/

NOTE: The CerberusX IDE requires that Qt 5.9.x be installed to your system.
The IDE does not work correctly with any version later than 5.9.9. And versions below 5.9 are not officially supported.

======= LINUX =======
You should find all the developer packages in your distributions online repository.

Unbuntu 18.04/Ubuntu 19.04 (packages should be the same for Linux Mint 18/19)
Cerberus standard development files for making applications
sudo apt-get install g++ libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libopenal-dev libglu1-mesa-dev

Cerberus IDE development files for Ubuntu 18.04/Linux Mint 18 Only (Uses Qt 5.9.5)
sudo apt-get install qtmultimedia5-dev qt5-default qtwebengine5-dev

OpenSUSE 15
Cerberus standard development files for making applications
sudo zypper in gcc-c++ Mesa-libGL-devel openal-soft-devel libXcursor-devel libXrandr-devel libXinerama-devel libXi-devel

Cerberus IDE development files for OpenSUSE 15 Only (Uses Qt 5.9.4)
sudo zypper in libqt5-qtwebengine-devel libqt5-qtmultimedia-devel

Fedora 29
Cerberus standard development files for making applications
sudo dnf install gcc-c++ mesa-libGLU-devel libXi-devel libXcursor-devel libXrandr-devel libXinerama-devel openal-soft-devel

Cerberus IDE development files for Fedora 29 Only (Uses Qt 5.11.2) and only listed here for reference or at some stage Ted is made to work with later versions of Qt.
sudo dnf install qt5-qtwebengine-devel qt5-qtmultimedia-devel
You should download the Qt SDK and install version 5.9.2. And follow Manual Install of Ted.

Raspbery Pi:
Open Terminal window:
sudo raspi-config

Navigate to:
7 - Advanced options >> A7 - GL Driver >> G1 - GL (Full KMS) OpenGL desktop driver with full KMS

sudo apt-get -y install g++ libglu1-mesa-dev libopenal-dev libxi-dev libxrandr-dev libxinerama-dev libxcursor-dev libxxf86vm-dev libx11-dev libgl1-mesa-dev
sudo apt-get -y install libqt5webkit5-dev libqt5sensors5-dev qtlocation5-dev libxslt1-dev libsqlite3-dev libgstreamer-plugins-base0.10-dev qt5-default libicu-dev


You will find a bash script called rebuildall.sh.
If you have installed the Qt SDK directly from https://www.qt.io/
And you have installed them to your home directory as a directory called Qt, or created a symbolic link to the Qt SDK in your home directory.
Then the script will automatically use those files, with the default being 5.9.2 if installed.
You can pass the Qt version to use from the command line.

If you have installed the distributions Qt pacakage, then you may have to edit the script to the
name that the distribution is using for executing Qt 5's qmake. Each distribution commonly uses their own naming scheme.


Open a bash shell and change directory to where this script is located.
Then type:
.\rebuildall.sh QTVER
NOTE: The parameter QTVER is the version of Qt to use if you have got the Qt SDK from https://www.qt.io/
The default is to use Qt 5.9.2.

IMPORTANT NOTE:
The GCC compiler that comes with later versions of Linux is setup to produce Position-Independent Executable's, also known as PIE.
The file browser/manager in most distributions currently will not launch these files directly and may never will. And launching a file via the file manager may be removed entirely in future releases.

To run Cerberus you will have to open a bash shell and change directory to the Cerberus root directory and type:
./Cerberus

For a much easier solution, see IMPORTANT NOTE at
https://www.cerberus-x.com/community/threads/install-requirements-for-linux-includes-raspbery-pi.741/#post-5728

======= WINDOWS 8 and 10 =======
You will require the Window version of GCC, but please note that newer versions will have issues.
It is recommended that you use the 64 bit version of TDM GCC 4.7/5.1.0.

To build the IDE for Cerberus, you will need to have Visual Studio 2017 installed.

You will find a power-shell script called rebuildall.ps1 that should work on Win7+.

NOTE: Before using this script make sure that the execution policy for the current user be set to unrestricted.
To do this open a power shell as administrator and use:
    get-executionpolicy -list
    set-executionpolicy -scope currentuser unrestricted
If the file is still blocked use:
    unblock-file -path "full_path_to_this_script"
You should reset the execution policy back to it's original state after using this script e.g.:
    set-executionpolicy -scope currentuser undefined

To use the script, open a power shell (not the noraml command shell) and change directory to where this script is located.
Then type:
.\rebuildall.ps1 -mingw "path_to_mingw_root_directory" -qtsdk "path_to_qtsdk_root_directory"

NOTE:
The parameters -mingw and -qtsdk are optional if you already have both paths set correctly in your system paths.
The defaults are shown
'path_to_mingw_root_directory' would be for example:
C:\MinGW

'path_to_qtsdk_root_directory' would be for example:
C:\Qt5\5.9.2\msvc2017_64

======= Mac OS X =======
You will require XCode at least 8.2, the xcode command line tools and the Qt SDK versions (5.9.x).
As Apple do change their tools often, you should check out the latest documentation.
But in general, once you have XCode installed. You can usually find the place to download the tools in general/download/components.
You just have to go looking for them. Or you can install the command line tools by opening a terminal, found in Applications->Utilities.
And typing xcode-select --install.

You will find a bash script called rebuildall_macos.sh.
If you have installed the Qt SDK directly from https://www.qt.io/
And you have installed them to your home directory as a directory called Qt, or created a symbolic link to the Qt SDK in your home directory.
Then the script will automatically use those files, with the default being 5.9.2 if installed.
You can pass the Qt version to use from the command line.

Then type:
.\rebuildall_macos.sh QTVER
NOTE: The parameter QTVER is the version of Qt to use if you have got the Qt SDK from https://www.qt.io/
The default is to use Qt 5.9.2.