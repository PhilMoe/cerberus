
# Module cerberus.set

# Import cerberus.map Private

The set module provides support for sets, collections of ordered objects.

In addition to the generic Set class, the set module also provides utility classes for handling sets of ints, floats and strings.

Please Refer to the [[Set]] class for more information on how cerberus implements sets.



# Class cerberus.set.Set<T>

'# Import cerberus.map Private

A set is a container style object that provides a mechanism for keeping track of a number of objects.

Each object in a set occurs exactly once - inserting the same object into a set multiple times does not result in the set containing multiple references to the same object.

Sets are implemented behind the scenes using Map objects, and are just as efficient at insertng, removing and finding objects.

Classes that extend Set<T> must invoke Super.New with an instance of a map object.


# Method New(map:Map<T,Object>)

Extending classes should invoke this method with a valid map object to be used to implement the set.


# Method Clear:Int()

Removes all items from the set.


# Method Count:Int()

Counts and returns the number of objects in the set.

Note that this method takes O(N) time - that is, it must visit each object in the set.


# Method IsEmpty:Bool()

Returns True if the set is empty, ie: contains no items, else False.


# Method Contains:Bool(value:T)

Return True if the specified value is contained in the set, else False.

Parameters: 

value - value to check


# Method Insert:Int(value:T)

Inserts value into the set.

Parameters: 

value - value to insert.


# Method Remove:Int(value:T)

Removes value from the set.

Parameters: 

value - value to remove.


'# Method ObjectEnumerator:KeyEnumerator<T,Object>()
# Method ObjectEnumerator:Object()

Returns an enumerator object that allows sets to be used with For Eachin loops.



# Class cerberus.set.IntSet Extends Set<Int>

'# Import cerberus.map Private

IntSet is a convenience class for managing sets of ints.


# Method New()



# Class cerberus.set.FloatSet Extends Set<Float>

'# Import cerberus.map Private

FloatSet is a convenience class for managing sets of floats.


# Method New()



# Class cerberus.set.StringSet Extends Set<String>

'# Import cerberus.map Private

StringSet is a convenience class for managing sets of strings.


# Method New()

